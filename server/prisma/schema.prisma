// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model User {
  id                String @id @default(uuid())
  firstName         String
  lastName          String
  email             String @unique
  imageUrl          String
  tests             Test[]
  collaboratedTests Test[] @relation("collaborator")
}

model Test {
  id                     String     @id @default(uuid())
  title                  String
  description            String
  passCriteria           Int
  showQuestionsOnResults Boolean
  randomizeQuestions     Boolean
  randomizeAnswers       Boolean
  createdAt              DateTime
  updatedAt              DateTime   @updatedAt
  questions              Question[]
  authorId               String
  author                 User       @relation(fields: [authorId], references: [id])
  collaborators          User[]     @relation("collaborator")
}

model Question {
  id                     String                  @id @default(uuid())
  type                   String
  question               String                  @db.VarChar(512)
  imageUrl               String?
  createdAt              DateTime                @default(now())
  testId                 String
  test                   Test                    @relation(fields: [testId], references: [id], onDelete: Cascade)
  multipleChoiceQuestion MultipleChoiceQuestion?
  codeQuestion           CodeQuestion?
}

model MultipleChoiceQuestion {
  questionId String   @id
  answers    Answer[]
  Question   Question @relation(fields: [questionId], references: [id])
}

model CodeQuestion {
  questionId  String   @id
  correctCode String   @db.VarChar(1024)
  Question    Question @relation(fields: [questionId], references: [id])
}

model Answer {
  id          String                 @id @default(uuid())
  answer      String                 @db.VarChar(512)
  isCorrect   Boolean
  createdAt   DateTime               @default(now())
  questionId String
  question    MultipleChoiceQuestion @relation(fields: [questionId], references: [questionId], onDelete: Cascade)
}
